
server:
  port: ${APPLICATION_PORT:5000}

spring:
  mail:
    protocol: smtp
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD:password}
    properties:
      smtp.auth: true
      mail:
        smtp:
          starttls:
            enable: true
            required: true
    test-connection: true

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.default_batch_fetch_size: 1000

  datasource:
    url: jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT:3306}/${DATABASE_NAME:vecto}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

jwt:
  bearer: ${JWT_BEARER:Bearer}
  secret: ${JWT_SECRET_KEY}
  access-expiration: ${JWT_ACCESS_EXPIRE:3600000} # 1시간 (단위: ms)
  access-header: ${JWT_ACCESS_HEADER:AUTHORIZATION} # Access Token 헤더
  refresh-expiration: ${JWT_REFRESH_EXPIRE:86400000} # 1일 (단위: ms)
  refresh-header: ${JWT_REFRESH_HEADER:AUTHORIZATION-REFRESH} # Refresh Token 헤더

cloud:
  aws:
    s3:
      accessKey: ${S3_ACCESS_KEY}
      secretKey: ${S3_SECRET_KEY}
      region: ${S3_REGION}

fcm:
  key:
    path: firebase/vecto-fc688-firebase-adminsdk-yyxm5-1527aad64c.json
    scope: https://www.googleapis.com/auth/cloud-platform














